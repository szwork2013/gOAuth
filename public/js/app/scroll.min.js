$scroll = {
    // t
    _t: null,
    // h
    _h: null,
    // id
    _id: null,
    // 访问控制
    _cl: null,
    // 结束回调
    _cb: null,
    // 滚动条位置
    _location: {
        startX: 0,
        startY: 0
    },
    // 移动前执行
    beforeFun: function() {
        return false;
    },
    // 初始化滚动条
    init: function(id, cb) {
        $scroll._id = $(id);
        $scroll._cb = cb;
        $scroll._id[0].addEventListener('touchstart', $scroll.touchSatrtFunc, false);  
        $scroll._id[0].addEventListener('touchmove', $scroll.touchMoveFunc, false);  
        $scroll._id[0].addEventListener('touchend', $scroll.touchEndFunc, false);
    },
    // 开始滚动
    touchSatrtFunc: function(evt) {
        // 获取第一个触点
        var touch = evt.touches[0];
        // 记录触点初始位置  
        $scroll._location = {
            startX: Number(touch.pageX),
            startY: Number(touch.pageY)
        };
    },
    // 滚动中
    touchMoveFunc: function(evt) {
        if (!$scroll.beforeFun()) {
            if (parseInt($scroll._id.css("top")) != 0) evt.preventDefault();
            // 获取当前触点
            var touch = evt.touches[0];
            clearTimeout($scroll._cl);
            $scroll._cl = setTimeout(function() {
                $scroll._h = $scroll._id.parent().height() - $scroll._id.height();
                if ($scroll._h < 0) {
                    // 重定义top
                    $scroll._t = parseInt($scroll._id.css("top")) + parseInt((touch.pageY - $scroll._location.startY) / 1.2);
                    // 定位
                    $scroll._id.css("top", $scroll._t >= 0 ? 0 : ($scroll._t <= $scroll._h ? $scroll._h : $scroll._t));
                }
            }, 10);
        }
    },
    // 结束滚动
    touchEndFunc: function(evt) {
        // 停止触发
        if (parseInt($scroll._id.css("top")) == $scroll._h) {
            $scroll._cb();
        }
    }
};