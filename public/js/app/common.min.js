// 是否是微信打开
$.ajax({
    url: "/api/wechatCertification",
    type: "get",
    data: {
        url : location.href
    },
    success: function (data) {
        if (typeof wx != 'undefined' && wx instanceof Object) {
            // 微信功能控制
            share({
                appid: $("#appid").val(),
                title: $("#title").val(),
                route: "/open" + location.href.split("?")[0].split("open")[1],
                state: location.href.split("?")[1],
                timestamp: data.timestamp,
                nonceStr: data.nonceStr,
                signature: data.signature, 
            }, getQueryString("isshare"));
        }
    }
});

/**
* 公共加载
**/
$(function() {
    // 菜单绑定切图效果
    $(".menu .menu_body div[class^='menu_body_']").click(function() {
        // 取消选中
        $(".menu .menu_body div[class^='menu_body_']").find("img").map(function(v, n) {
            $(n).prop("src", $(n).attr("src").replace("active", "default"));
            $(n).next().removeClass("active");
        });
        // 设置选中
        $(this).find("img").prop("src", $(this).find("img").attr("src").replace("default", "active")).next().addClass("active");
    });
    // 初始化布局
    $(".app").show().height(document.documentElement.clientHeight);
    // 初始化脚本
    if (typeof init != 'undefined' && init instanceof Function) init();
    // 选择控件隐藏
    $(".choose_mask").click(function() {
        $(".choose_mask, .choose_select").hide();
    });
    // 加载结束
    $(".loading-container").addClass("loading-inactive");
});

/**
* 支持分享
*/
function share(data, isShare) {
    // 配置
    wx.config({
        //必须传入，不然没办法调未正式发布的jsapi
        beta: false,
        debug: false,
        appId: data.appid,
        timestamp: data.timestamp,
        nonceStr: data.nonceStr,
        signature: data.signature,
        jsApiList: isShare == "true" ? [
            "hideMenuItems",
            "showAllNonBaseMenuItem"
        ] : [
            "hideOptionMenu"
        ]
    });
    //分享接口函数
    wx.ready(function() {
        if (isShare == "true") {
            wx.showAllNonBaseMenuItem();
            wx.hideMenuItems({
                // 要隐藏的菜单项，只能隐藏“传播类”和“保护类”按钮，所有menu项见附录3
                menuList: [
                    'menuItem:share:facebook',
                    'menuItem:share:weiboApp',
                    'menuItem:share:qq',
                    'menuItem:openWithQQBrowser',
                    'menuItem:share:email',
                    'menuItem:openWithSafari',
                    'menuItem:copyUrl'
                ]
            });
        } else {
            wx.hideOptionMenu();
        }
    });
}

/**
 * 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符， 
 * 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字) 
 * 例子： 
 *    (new Date()).format("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423 
 *    (new Date()).format("yyyy-M-d h:m:s.S")      ==> 2006-7-2 8:9:4.18 
 * 
 * @param {String} fmt 日期格式字符串
 */
Date.prototype.format = function (fmt) {
    var o = {
        //月份 
        "M+": this.getMonth() + 1,      
        //日 
        "d+": this.getDate(),
        //小时 
        "h+": this.getHours(),      
        //分 
        "m+": this.getMinutes(),        
        //秒 
        "s+": this.getSeconds(),            
        //季度 
        "q+": Math.floor((this.getMonth() + 3) / 3), 
        //毫秒 
        "S": this.getMilliseconds()
    };
    if (/(y+)/.test(fmt)) {
        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    }
    for (var k in o) {
        if (new RegExp("(" + k + ")").test(fmt)) {
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        }
    }
    return fmt;
};

/*
* 获取微信个人信息的方法
*/
function getQueryString(name) {
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
    var r = window.location.search.substr(1).match(reg);
    if (r != null) return unescape(r[2]);
    return null;
}

/**
 * 创建选择控件
 */
function createChoose(data, cb) {
    // 循环生成下拉
    for(var i = 0; i < data.length; i++) {
        // 执行搜索查询
        $("." + data[i].name + " span").html((function(value) {
            if (value) {
                // 缓存选择
                $("input[name='" + data[i].name + "']").val(value);
                // 是否不限
                if (value == "-") {
                    return "不限";
                } else {
                    // 数值换算
                    var arr = value.split("-");
                    // 显示控制
                    return !arr[0] ? (arr[1] + data[i].units + "以下") : (!arr[1] ? (arr[0] + data[i].units + "以上") : (value + data[i].units));
                }
            } else {
                return data[i].placeholder;
            }
        })(sessionStorage[data[i].name]));
        // 下拉框定位
        $("div[choose='" + data[i].name + "']").css({
            top: parseInt($("." + data[i].name).css("top")) + 77
        });
        // 下拉绑定
        $("." + data[i].name).click(function() {
            $(".choose_select").hide();
            $("div[choose='" + $(this).prop("class").split(" ")[1] + "'],.choose_mask").show();
        });
    }
    // 下拉框选择
    $(".choose_select .choose_select_option").click(function() {
        // 转换选择项
        (function ($this) {
            // 找到选择框
            (function (choose) {
                $(".choose_mask").hide();
                $("input[name='" + choose + "']").val($this.attr("value"));
                sessionStorage[choose] = $this.attr("value");
                $("." + choose).find("span").html($this.html());
                cb();
            })($this.parent(".choose_select").hide().attr("choose"));
        })($(this));
    });
}

/**
 * 追加成功参数
 */
function setQueStr(url, ref, value) {
    var str = "";
    if (url.indexOf('?') != -1)
        str = url.substr(url.indexOf('?') + 1);
    else
        return url + "?" + ref + "=" + value;
    var returnurl = "";
    var setparam = "";
    var arr;
    var modify = "0";

    if (str.indexOf('&') != -1) {
        arr = str.split('&');

        for (i in arr) {
            if (arr[i].split('=')[0] == ref) {
                setparam = value;
                modify = "1";
            }
            else {
                setparam = arr[i].split('=')[1];
            }
            returnurl = returnurl + arr[i].split('=')[0] + "=" + setparam + "&";
        }

        returnurl = returnurl.substr(0, returnurl.length - 1);

        if (modify == "0")
            if (returnurl == str)
                returnurl = returnurl + "&" + ref + "=" + value;
    }
    else {
        if (str.indexOf('=') != -1) {
            arr = str.split('=');

            if (arr[0] == ref) {
                setparam = value;
                modify = "1";
            }
            else {
                setparam = arr[1];
            }
            returnurl = arr[0] + "=" + setparam;
            if (modify == "0")
                if (returnurl == str)
                    returnurl = returnurl + "&" + ref + "=" + value;
        }
        else
            returnurl = ref + "=" + value;
    }
    return url.substr(0, url.indexOf('?')) + "?" + returnurl;
}

String.prototype.setQueStr = function (ref, value) {
    var str = this.substr(this.indexOf('?') + 1), returnurl = "", setparam = "", arr, modify = "0";
    if (this.indexOf('?') == -1) return this + "?" + ref + "=" + value;
    if (str.indexOf('&') != -1) {
        arr = str.split('&');
        for (i in arr) {
            if (arr[i].split('=')[0] == ref) {
                setparam = value;
                modify = "1";
            }
            else {
                setparam = arr[i].split('=')[1];
            }
            returnurl = returnurl + arr[i].split('=')[0] + "=" + setparam + "&";
        }
        returnurl = returnurl.substr(0, returnurl.length - 1);
        if (modify == "0")
            if (returnurl == str)
                returnurl = returnurl + "&" + ref + "=" + value;
    } else {
        if (str.indexOf('=') != -1) {
            arr = str.split('=');
            if (arr[0] == ref) {
                setparam = value;
                modify = "1";
            } else {
                setparam = arr[1];
            }
            returnurl = arr[0] + "=" + setparam;
            if (modify == "0")
                if (returnurl == str)
                    returnurl = returnurl + "&" + ref + "=" + value;
        } else
            returnurl = ref + "=" + value;
    }
    return this.substr(0, this.indexOf('?')) + "?" + returnurl;
};

/**
* 静态搜索方法
***/
function loadingSearch($obj) {
    // 页码
    var pageindex = 1,
        // 是否还有数据
        pagebool = true,
        // 执行查询
        isSearch;
    // 定向页码跳转
    function pageNumber(index) {
        // 是否传了页码
        if (index) {
            // 清空所有数据行
            $obj.body.html("");
            // 指向第一页
            pageindex = index;
            // 重新支持取数据
            pagebool = true;
            // 查询初始化
            if ($obj.initQuery) $obj.initQuery();
        } else {
            // 分页查询页码加加
            pageindex++;
        }
        // 返回是否执行查询
        return pagebool;
    }
    // ajax请求数据源
    function ajaxFun(index) {
        // 请求数据源
        $.ajax({
            url: $obj.urlFun(pageindex),
            type: $obj.type,
            success: function(msg) {
                // 数据加载前执行
                if ($obj.nullFun) $obj.nullFun(msg);
                // 是否有数据
                if (msg[$obj.dataName] && msg[$obj.dataName].length) {
                    // 循环数据
                    var i = 0;
                    // 递归加载数据
                    $obj.appendFun(msg, msg[$obj.dataName][i], function(html) {
                        // 放列
                        $obj.body.append(html);
                        // 增加
                        i++;
                        // 是否存在列
                        if (msg[$obj.dataName][i]) {
                            $obj.appendFun(msg, msg[$obj.dataName][i], arguments.callee);
                        }
                    });
                } else {
                    // 没有数据了
                    pagebool = false;
                    // 无数据图
                    if (index == 1) {
                        $obj.body.html($obj.htmlFun(msg));
                    }
                }
            }
        });
    }
    // 滚动至底触发
    $($obj.divClass).scroll(function () {
        // 滚动到底部触发
        $obj.scrollFun(pageindex);
    });
    // 生成查询方法
    return (function (index) {
        // 是否不分页
        if (index) {
            // 取消查询
            clearTimeout(isSearch);
            // 执行查询
            isSearch = setTimeout(function() {
                // 是否执行查询
                if (pageNumber(index)) {
                    // 请求取数据
                    ajaxFun(index);
                }
            }, 0);
        } else {
            // 是否执行查询
            if (pageNumber(index)) {
                // 请求取数据
                ajaxFun(index);
            }
        }
    });
}